// Click cyinput
// simple VerbPhrase
// ---------------SimpleVerbPhraseData
// cy.get('.cyinput').click()
{
  "VerbPhrase": {
    "verb": "click",
    "noun": "cyinput"
  }
}
// Click on cyinput
// with preposition
// preposition should be ignored by the interpreter
// --------------SimpleVerbPhraseData
// cy.get('.cyinput').click()
{
  "VerbPhrase": {
    "verb": "click",
    "preposition": "on",
    "noun": "cyinput"
  }
}
// Click on button cyinput
// VerbPhrase with 2 nouns
// deepest noun should be ignored and treated as complement
// --------------NestedVerbPhraseData
// cy.get('button.cyinput').click()
{
  "VerbPhrase": {
    "VerbPhrase": {
      "verb": "click",
      "preposition": "on",
      "noun": "button"
    },
    "noun": "cyinput"
  }
}

// Button should be input
// -------------CompoundModalVerbPhraseData
// cy.get('.Button').should('be.input')
{
  "VerbPhrase": {
    "VerbPhrase": {
      "noun": "Button",
      "ModalVerbPhrase": { // NestedModalVerbPhraseData
        "modalVerb": "should",
        "verb": "be"
      }
    },
    "noun": "input"
  }
}

// cyinput value should be localhost
// ModalVerb
// first level noun is subject
// outermost level noun is assert value
// middle level noun is the subject's property that should be checked
// modal verb is the assertion
// -----------------CompoundVerbPhraseData
// TODO: handle different assertions - value, be, have value etc.
// https://docs.cypress.io/api/commands/should
// cy.get('.cyinput').should('have.value', 'localhost')
{
  "VerbPhrase": {
    "VerbPhrase": {
      "noun": "cyinput",  // target
      "VerbPhrase": { // NestedModalVerbPhraseData
        "ModalVerbPhrase": {
          "modalVerb": "should",
          "verb": "be"
        }
      }
    },
    "noun": "localhost" // complement
  }
}
// cyinput should be visible
// Predicate
// same as Modal verb, just here it is certain that
// there is an adverb that will be used for the assertion
// --------------PredicatePhraseData
// cy.get('.button').should('be.visible')
{
  "Predicate": {
    "VerbPhrase": {
      "noun": "button",
      "ModalVerbPhrase": {
        "modalVerb": "should",
        "verb": "be"
      }
    },
    "adverb": "visible"
  }
}

// Mega compound nested verb/modal verb phrase...
// all nouns except outer most are chainables?
// cy.get('.button').should('have.value', 'cybutton')
// CompoundVerbPhraseData ?
{
  "VerbPhrase": {
    "VerbPhrase": {  // CompoundModalVerbPhraseData
      "VerbPhrase": {   // CompoundModalVerbData
        "noun": "button",
        "ModalVerbPhrase": {
          "modalVerb": "should",
          "verb": "have"
        }
      },
      "noun": "value"
    },
    "noun": "cybutton"
  }
}
